
use crate::errors::{AppResult, ErrorKind};



pub fn from_vec(s: Vec<char>) -> AppResult<(i64, i64)> {
    let s: String = s.into_iter().collect();
    from(&s)
}

#[cfg_attr(feature = "cargo-clippy", allow(clippy::decimal_literal_representation))]
pub fn from(s: &str) -> AppResult<(i64, i64)> {
    let ok = match s {
        "2K" => (2048, 1080),
        "4K" => (3840, 2160),
        "5K" | "UHD+" => (5120, 2880),
        "8K" => (7680, 4320),
        "DCI4K"  => (4096, 2160),
        "DVGA" => (960, 640),
        "FHD" => (1920, 1080),
        "FHD+" => (2160, 1440),
        "FWVGA" => (854, 480),
        "HD" => (1280, 720),
        "HD+" => (1600, 900),
        "HQVGA" => (240, 160),
        "HSXGA" => (5120, 4096),
        "HUXGA" => (6400, 4800),
        "HVGA" => (480, 320),
        "HXGA" => (4096, 3072),
        "QHD" | "WQHD" => (2560, 1440),
        "QHD+" => (3200, 1800),
        "QQVGA" => (160, 120),
        "QSXGA" => (2560, 2048),
        "QUXGA" => (3200, 2400),
        "QVGA" => (320, 240),
        "QWXGA" => (2048, 1152),
        "QXGA" => (2048, 1536),
        "SVGA" => (800, 600),
        "SXGA" => (1280, 1024),
        "SXGA+" => (1400, 1050),
        "UW4K" => (3840, 1600),
        "UW5K" => (5120, 2160),
        "UW8K" => (7680, 3200),
        "UWQHD" => (3440, 1440),
        "UXGA" => (1600, 1200),
        "VGA" | "SD" => (640, 480),
        "WHSXGA" => (6400, 4096),
        "WHUXGA" => (7680, 4800),
        "WHXGA" => (5120, 3200),
        "WQSXGA" => (3200, 2048),
        "WQUXGA" => (3840, 2400),
        "WQVGA" => (400, 240),
        "WQXGA" => (2560, 1600),
        "WSVGA" => (1024, 600),
        "WSXGA+" => (1680, 1050),
        "WUXGA" => (1920, 1200),
        "WVGA" => (768, 480),
        "WXGA" => (1366, 768),
        "WXGA+" => (1440, 900),
        "XGA" => (1024, 768),
        "XGA+" => (1152, 864),
        "nHD" => (640, 360),
        "qHD" => (960, 540),
        _ => return Err(ErrorKind::InvalidValue(o!(s)))?
    };
    Ok(ok)
}

#[cfg_attr(feature = "cargo-clippy", allow(clippy::decimal_literal_representation))]
pub fn to(w: i64, h: i64) -> String {
    let result = match (w, h) {
        (1024, 600) => "WSVGA",
        (1024, 768) => "XGA",
        (1152, 864) => "XGA+",
        (1280, 1024) => "SXGA",
        (1280, 720) => "HD",
        (1366, 768) => "WXGA",
        (1400, 1050) => "SXGA+",
        (1440, 900) => "WXGA+",
        (160, 120) => "QQVGA",
        (1600, 1200) => "UXGA",
        (1600, 900) => "HD+",
        (1680, 1050) => "WSXGA+",
        (1920, 1080) => "FHD",
        (1920, 1200) => "WUXGA",
        (2048, 1080) => "2K",
        (2048, 1152) => "QWXGA",
        (2048, 1536) => "QXGA",
        (2160, 1440) => "FHD+",
        (240, 160) => "HQVGA",
        (2560, 1440) => "QHD",
        // (2560, 1440) => "WQHD",
        (2560, 1600) => "WQXGA",
        (2560, 2048) => "QSXGA",
        (320, 240) => "QVGA",
        (3200, 1800) => "QHD+",
        (3200, 2048) => "WQSXGA",
        (3200, 2400) => "QUXGA",
        (3440, 1440) => "UWQHD",
        (3840, 1600) => "UW4K",
        (3840, 2160) => "4K",
        (3840, 2400) => "WQUXGA",
        (400, 240) => "WQVGA",
        (4096, 2160) => "DCI4K",
        (4096, 3072) => "HXGA",
        (480, 320) => "HVGA",
        (5120, 2160) => "UW5K",
        (5120, 2880) => "5K",
        (5120, 3200) => "WHXGA",
        (5120, 4096) => "HSXGA",
        (640, 360) => "nHD",
        // (640, 480) => "SD",
        (640, 480) => "VGA",
        (6400, 4096) => "WHSXGA",
        (6400, 4800) => "HUXGA",
        (768, 480) => "WVGA",
        (7680, 3200) => "UW8K",
        (7680, 4320) => "8K",
        (7680, 4800) => "WHUXGA",
        (800, 600) => "SVGA",
        (854, 480) => "FWVGA",
        (960, 540) => "qHD",
        (960, 640) => "DVGA",
        // (5120, 2880) => "UHD+",
        _ => return format!("{}x{}", w, h),
    };
    o!(result)
}
